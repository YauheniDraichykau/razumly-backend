datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  passwordHash  String?
  name      String?
  avatar    String?
  provider  AuthProvider @default(GOOGLE)
  providerId String?  @unique
  role      Role      @default(USER)
  googleId  String?  
  documents Document[]
  refreshTokens RefreshToken[]

  createdAt DateTime @default(now())
}

model Document {
  id            String   @id @default(uuid())
  userId        String
  user          User      @relation(fields: [userId], references: [id])

  type          DocumentType
  originalPath  String             // S3 or local key
  originalText  String
  simplified    String?
  status        Status    @default(PENDING)
  error         String?              // reason if FAILED

  createdAt     DateTime  @default(now())
  completedAt   DateTime?

  @@index([userId, createdAt])
  @@index([type, createdAt])
}

model RefreshToken {
  id        String   @id @default(uuid())
  tokenHash String   @unique
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  expires   DateTime
  createdAt DateTime @default(now())
  used      Boolean  @default(false)
}

enum AuthProvider {
  GOOGLE
  GITHUB
  EMAIL
}

enum Role {
  USER
  ADMIN
}

enum DocumentType {
  MEDICAL
  FINANCIAL
  LEGAL
  GENERAL
}

enum Status {
  PENDING
  COMPLETED
  FAILED
}
